<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WatsonMesh</name>
    </assembly>
    <members>
        <member name="T:WatsonMesh.ClientConnectionEventArgs">
            <summary>
            Event arguments passed when a client connects or disconnects.
            </summary>
        </member>
        <member name="P:WatsonMesh.ClientConnectionEventArgs.Guid">
            <summary>
            Client GUID.
            </summary>
        </member>
        <member name="P:WatsonMesh.ClientConnectionEventArgs.IpPort">
            <summary>
            Client metadata.
            </summary>
        </member>
        <member name="M:WatsonMesh.ClientConnectionEventArgs.#ctor(System.Guid,System.String)">
            <summary>
            Instantiate.
            </summary>
            <param name="guid">Guid.</param>
            <param name="ipPort">IP:port.</param>
        </member>
        <member name="T:WatsonMesh.Common">
            <summary>
            Commonly-used static methods.
            </summary>
        </member>
        <member name="T:WatsonMesh.DefaultSerializationHelper">
            <summary>
            Default serialization helper.
            </summary>
        </member>
        <member name="M:WatsonMesh.DefaultSerializationHelper.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:WatsonMesh.DefaultSerializationHelper.DeserializeJson``1(System.String)">
            <summary>
            Deserialize JSON to an instance.
            </summary>
            <typeparam name="T">Type.</typeparam>
            <param name="json">JSON string.</param>
            <returns>Instance.</returns>
        </member>
        <member name="M:WatsonMesh.DefaultSerializationHelper.SerializeJson(System.Object,System.Boolean)">
            <summary>
            Serialize object to JSON.
            </summary>
            <param name="obj">Object.</param>
            <param name="pretty">Pretty print.</param>
            <returns>JSON.</returns>
        </member>
        <member name="M:WatsonMesh.DefaultSerializationHelper.InstantiateConverter">
            <summary>
            Instantiation method to support fixups for various environments, e.g. Unity.
            </summary>
        </member>
        <member name="T:WatsonMesh.ISerializationHelper">
            <summary>
            Serialization helper.
            </summary>
        </member>
        <member name="M:WatsonMesh.ISerializationHelper.DeserializeJson``1(System.String)">
            <summary>
            Deserialize from JSON to an object of the specified type.
            </summary>
            <typeparam name="T">Type.</typeparam>
            <param name="json">JSON string.</param>
            <returns>Instance.</returns>
        </member>
        <member name="M:WatsonMesh.ISerializationHelper.SerializeJson(System.Object,System.Boolean)">
            <summary>
            Serialize from object to JSON.
            </summary>
            <param name="obj">Object.</param>
            <param name="pretty">Pretty print.</param>
            <returns>JSON.</returns>
        </member>
        <member name="M:WatsonMesh.ISerializationHelper.InstantiateConverter">
            <summary>
            Instantiation method to support fixups for various environments, e.g. Unity.
            </summary>
        </member>
        <member name="M:WatsonMesh.MeshClient.Dispose">
            <summary>
            Tear down the client and dispose of background workers.
            </summary>
        </member>
        <member name="T:WatsonMesh.MeshNode">
            <summary>
            Watson mesh node.
            </summary>
        </member>
        <member name="P:WatsonMesh.MeshNode.IsHealthy">
            <summary>
            Check if all remote server connections are alive.
            </summary>
        </member>
        <member name="E:WatsonMesh.MeshNode.PeerConnected">
            <summary>
            Event to fire when a connection to the local server is successfully established.
            </summary>
        </member>
        <member name="E:WatsonMesh.MeshNode.PeerDisconnected">
            <summary>
            Event to fire when a connection to the local server is severed.
            </summary>
        </member>
        <member name="E:WatsonMesh.MeshNode.MessageReceived">
            <summary>
            Event to fire when a message is received from a peer.
            Read .ContentLength bytes from .DataStream, or, use .Data which will read the stream fully.
            </summary>
        </member>
        <member name="F:WatsonMesh.MeshNode.SyncMessageReceived">
            <summary>
            Event to fire when a sync message is received from a peer and a response is expected.
            Read .ContentLength bytes from .DataStream, or, use .Data which will read the stream fully.
            Your function must return a SyncResponse object.
            </summary>
        </member>
        <member name="F:WatsonMesh.MeshNode.Logger">
            <summary>
            Function to invoke when sending log messages.
            </summary>
        </member>
        <member name="P:WatsonMesh.MeshNode.Serializer">
            <summary>
            Serializer.
            </summary>
        </member>
        <member name="M:WatsonMesh.MeshNode.#ctor(WatsonMesh.MeshSettings,System.String,System.Int32,System.Boolean,System.String,System.String)">
            <summary>
            Instantiate the platform with no peers with SSL.  
            Be sure to Start() and then Add(Peer) peers.
            </summary>
            <param name="settings">Settings for the mesh network.</param> 
            <param name="ip">The IP address; either 127.0.0.1, or, an address that maps to a local network interface.</param>
            <param name="port">The TCP port on which to listen.</param>
            <param name="ssl">Enable or disable SSL.</param>
            <param name="pfxCertFile">The PFX certificate file.</param>
            <param name="pfxCertPass">The password to the PFX certificate file.</param>
        </member>
        <member name="M:WatsonMesh.MeshNode.Start">
            <summary>
            Start the mesh network server.
            </summary>
        </member>
        <member name="M:WatsonMesh.MeshNode.IsPeerConnected(System.Guid)">
            <summary>
            Check if a specific remote server connection is alive.
            </summary>
            <param name="guid">GUID of the peer.</param>
            <returns>True if connected.</returns>
        </member>
        <member name="M:WatsonMesh.MeshNode.DisconnectClient(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Disconnect a remote client.
            </summary>
            <param name="guid">GUID of the peer.</param>
            <param name="token">Cancellation token.</param>
        </member>
        <member name="M:WatsonMesh.MeshNode.Add(WatsonMesh.MeshPeer)">
            <summary>
            Add a peer to the network.
            </summary>
            <param name="peer">Peer.</param>
        </member>
        <member name="M:WatsonMesh.MeshNode.Remove(System.Guid)">
            <summary>
            Remove a peer from the network.
            </summary>
            <param name="guid">Guid.</param>
        </member>
        <member name="M:WatsonMesh.MeshNode.Exists(WatsonMesh.MeshPeer)">
            <summary>
            Check if a peer is part of the network.
            </summary>
            <param name="peer">Peer.</param>
            <returns>True if the Peer is part of the network.</returns>
        </member>
        <member name="M:WatsonMesh.MeshNode.GetPeers">
            <summary>
            Return a list of all Peer objects.
            </summary>
            <returns>List of Peer.</returns>
        </member>
        <member name="M:WatsonMesh.MeshNode.GetDisconnectedPeers">
            <summary>
            Get list of disconnected peers.
            </summary>
            <returns>List of Peer.</returns>
        </member>
        <member name="M:WatsonMesh.MeshNode.Send(System.Guid,System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
            Send string data to a peer asynchronously.
            </summary>
            <param name="guid">GUID of the peer.</param>
            <param name="data">Data.</param>
            <param name="metadata">Metadata dictionary.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="M:WatsonMesh.MeshNode.Send(System.Guid,System.Byte[],System.Collections.Generic.Dictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
            Send byte data to a peer asynchronously.
            </summary>
            <param name="guid">GUID of the peer.</param>
            <param name="data">Data.</param>
            <param name="metadata">Metadata dictionary.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="M:WatsonMesh.MeshNode.Send(System.Guid,System.Int64,System.IO.Stream,System.Collections.Generic.Dictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
            Send byte data to a peer asynchronously using a stream.
            </summary>
            <param name="guid">GUID of the peer.</param>
            <param name="contentLength">The number of bytes to read from the stream.</param>
            <param name="stream">The stream containing the data.</param>
            <param name="metadata">Metadata dictionary.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="M:WatsonMesh.MeshNode.SendAndWait(System.Guid,System.Int32,System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
            Send string data to a peer and wait for a response for the specified timeout duration.
            </summary>
            <param name="guid">GUID of the peer.</param>
            <param name="timeoutMs">Timeout in milliseconds.</param>
            <param name="data">Data.</param>
            <param name="metadata">Metadata dictionary.</param>
            <param name="token">Cancellation token.</param>
            <returns>SyncResponse.</returns>
        </member>
        <member name="M:WatsonMesh.MeshNode.SendAndWait(System.Guid,System.Int32,System.Byte[],System.Collections.Generic.Dictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
            Send byte data to a peer and wait for a response for the specified timeout duration.
            </summary>
            <param name="guid">GUID of the peer.</param>
            <param name="timeoutMs">Number of milliseconds to wait before considering the request expired.</param>
            <param name="data">Data.</param>
            <param name="metadata">Metadata dictionary.</param>
            <param name="token">Cancellation token.</param>
            <returns>SyncResponse.</returns>
        </member>
        <member name="M:WatsonMesh.MeshNode.SendAndWait(System.Guid,System.Int32,System.Int64,System.IO.Stream,System.Collections.Generic.Dictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
            Send stream data to a peer and wait for a response for the specified timeout duration.
            </summary>
            <param name="guid">GUID of the peer.</param>
            <param name="timeoutMs">Number of milliseconds to wait before considering the request expired.</param>
            <param name="contentLength">The number of bytes to read from the stream.</param>
            <param name="stream">The stream containing the data.</param>
            <param name="metadata">Metadata to include with the message.</param>
            <param name="token">Cancellation token.</param>
            <returns>SyncResponse.</returns>
        </member>
        <member name="M:WatsonMesh.MeshNode.Broadcast(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
            Broadcast string data to all nodes asynchronously.
            </summary>
            <param name="data">Data.</param>
            <param name="metadata">Metadata to include with the message.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="M:WatsonMesh.MeshNode.Broadcast(System.Byte[],System.Collections.Generic.Dictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
            Broadcast byte data to all nodes asynchronously.
            </summary>
            <param name="data">Data.</param>
            <param name="metadata">Metadata to include with the message.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="M:WatsonMesh.MeshNode.Broadcast(System.Int64,System.IO.Stream,System.Collections.Generic.Dictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
            Broadcast stream data to all nodes asynchronously.
            </summary>
            <param name="contentLength">The number of bytes to read from the stream.</param>
            <param name="stream">The stream containing the data.</param>
            <param name="metadata">Metadata to include with the message.</param>
            <param name="token">Cancellation token.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="T:WatsonMesh.MeshPeer">
            <summary>
            A peer WatsonMesh node.
            </summary>
        </member>
        <member name="P:WatsonMesh.MeshPeer.Guid">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:WatsonMesh.MeshPeer.Ip">
            <summary>
            IP address of the peer.
            </summary>
        </member>
        <member name="P:WatsonMesh.MeshPeer.Port">
            <summary>
            TCP port number of the peer on which a connection should be attempted.
            </summary>
        </member>
        <member name="P:WatsonMesh.MeshPeer.IpPort">
            <summary>
            Server IP address and port of the node, of the form IP:Port.
            </summary>
        </member>
        <member name="P:WatsonMesh.MeshPeer.Ssl">
            <summary>
            Enable or disable SSL.
            </summary>
        </member>
        <member name="P:WatsonMesh.MeshPeer.PfxCertificateFile">
            <summary>
            PFX SSL certificate path and filename.
            </summary>
        </member>
        <member name="P:WatsonMesh.MeshPeer.PfxCertificatePassword">
            <summary>
            Password for PFX SSL certificate file.
            </summary>
        </member>
        <member name="M:WatsonMesh.MeshPeer.#ctor(System.Guid,System.String,System.Boolean,System.String,System.String)">
            <summary>
            Instantiate the object.  Call 'Connect()' method after instantiating and assigning values.
            </summary> 
            <param name="guid">GUID of the peer.</param>
            <param name="ipPort">IP address and port of the peer server, of the form IP:port.</param>
            <param name="ssl">True if using SSL.</param>
            <param name="pfxCertFile">PFX SSL certificate path and filename.</param>
            <param name="pfxCertPass">Password for PFX SSL certificate file.</param>
        </member>
        <member name="M:WatsonMesh.MeshPeer.ToString">
            <summary>
            Human-readable String representation of the object.
            </summary>
            <returns>String.</returns>
        </member>
        <member name="M:WatsonMesh.MeshServer.Dispose">
            <summary>
            Tear down the client and dispose of background workers.
            </summary>
        </member>
        <member name="T:WatsonMesh.MeshSettings">
            <summary>
            Settings for the mesh network.
            </summary>
        </member>
        <member name="F:WatsonMesh.MeshSettings.AutomaticReconnect">
            <summary>
            Indicate whether or not to automatically reconnect when a connection is severed.
            </summary>
        </member>
        <member name="P:WatsonMesh.MeshSettings.ReconnectIntervalMs">
            <summary>
            Reconnect attempt interval, in milliseconds.
            </summary>
        </member>
        <member name="F:WatsonMesh.MeshSettings.PresharedKey">
            <summary>
            Shared secret password to use to mutually authenticate mesh network members.
            </summary>
        </member>
        <member name="F:WatsonMesh.MeshSettings.AcceptInvalidCertificates">
            <summary>
            Enable or disable acceptance of invalid or unverifiable SSL certificates.
            </summary>
        </member>
        <member name="F:WatsonMesh.MeshSettings.MutuallyAuthenticate">
            <summary>
            Enable or disable mutual authentication when using SSL.
            </summary>
        </member>
        <member name="P:WatsonMesh.MeshSettings.StreamBufferSize">
            <summary>
            Buffer size to use when reading input and output streams.  Default is 65536.
            </summary>
        </member>
        <member name="P:WatsonMesh.MeshSettings.Guid">
            <summary>
            GUID for the mesh node.
            </summary>
        </member>
        <member name="M:WatsonMesh.MeshSettings.#ctor">
            <summary>
            Instantiate the object.
            </summary>
        </member>
        <member name="T:WatsonMesh.Message">
            <summary>
            Message object, exchanged between peers in the mesh network.
            </summary>
        </member>
        <member name="T:WatsonMesh.MessageReceivedEventArgs">
            <summary>
            Event arguments passed when a message is received.
            </summary>
        </member>
        <member name="P:WatsonMesh.MessageReceivedEventArgs.Id">
            <summary>
            Unique ID for the message. 
            </summary>
        </member>
        <member name="P:WatsonMesh.MessageReceivedEventArgs.SyncRequest">
            <summary>
            Indicates if the message is a synchronous message request.
            </summary>
        </member>
        <member name="P:WatsonMesh.MessageReceivedEventArgs.SyncResponse">
            <summary>
            Indicates if the message is a response to a synchronous message request.
            </summary>
        </member>
        <member name="P:WatsonMesh.MessageReceivedEventArgs.TimeoutMs">
            <summary>
            For synchronous requests or responses, the number of milliseconds before the message expires.
            </summary>
        </member>
        <member name="P:WatsonMesh.MessageReceivedEventArgs.SourceIpPort">
            <summary>
            The sender's server IP:port.
            </summary>
        </member>
        <member name="P:WatsonMesh.MessageReceivedEventArgs.SourceGuid">
            <summary>
            The sender's GUID.
            </summary>
        </member>
        <member name="P:WatsonMesh.MessageReceivedEventArgs.DestinationIpPort">
            <summary>
            The receiver's server IP:port.
            </summary>
        </member>
        <member name="P:WatsonMesh.MessageReceivedEventArgs.DestinationGuid">
            <summary>
            The receiver's GUID.
            </summary>
        </member>
        <member name="P:WatsonMesh.MessageReceivedEventArgs.Type">
            <summary>
            The type of message being sent.
            </summary>
        </member>
        <member name="P:WatsonMesh.MessageReceivedEventArgs.Metadata">
            <summary>
            Dictionary containing metadata to include with the message.
            </summary>
        </member>
        <member name="P:WatsonMesh.MessageReceivedEventArgs.ContentLength">
            <summary>
            Content length of the data.
            </summary>
        </member>
        <member name="P:WatsonMesh.MessageReceivedEventArgs.DataStream">
            <summary>
            The stream containing the data being transmitted.
            </summary>
        </member>
        <member name="P:WatsonMesh.MessageReceivedEventArgs.Data">
            <summary>
            The data from DataStream.
            Using Data will fully read the contents of DataStream.
            </summary>
        </member>
        <member name="T:WatsonMesh.MessageTypeEnum">
            <summary>
            The type of message.
            </summary> 
        </member>
        <member name="F:WatsonMesh.MessageTypeEnum.Data">
            <summary>
            Application data.
            </summary>
        </member>
        <member name="T:WatsonMesh.ServerConnectionEventArgs">
            <summary>
            Event arguments passed when a connection is established on the local mesh server.
            </summary>
        </member>
        <member name="P:WatsonMesh.ServerConnectionEventArgs.PeerNode">
            <summary>
            The peer object.
            </summary>
        </member>
        <member name="T:WatsonMesh.SyncResponse">
            <summary>
            Object encapsulating a response to a synchronous message.
            </summary>
        </member>
        <member name="P:WatsonMesh.SyncResponse.Status">
            <summary>
            Synchronous response status.
            </summary>
        </member>
        <member name="P:WatsonMesh.SyncResponse.ContentLength">
            <summary>
            Response data length.
            </summary>
        </member>
        <member name="P:WatsonMesh.SyncResponse.DataStream">
            <summary>
            Stream containing response data.  Set ContentLength first.
            </summary>
        </member>
        <member name="P:WatsonMesh.SyncResponse.Data">
            <summary>
            The data from DataStream.
            Using Data will fully read the contents of DataStream.
            </summary>
        </member>
        <member name="P:WatsonMesh.SyncResponse.Exception">
            <summary>
            Exception associated with failure, if applicable.
            </summary>
        </member>
        <member name="M:WatsonMesh.SyncResponse.#ctor(WatsonMesh.SyncResponseStatusEnum,System.String)">
            <summary>
            Instantiate the object.
            </summary>
            <param name="status">Response status.</param>
            <param name="data">Data.</param>
        </member>
        <member name="M:WatsonMesh.SyncResponse.#ctor(WatsonMesh.SyncResponseStatusEnum,System.Byte[])">
            <summary>
            Instantiate the object.
            </summary>
            <param name="status">Response status.</param>
            <param name="data">Data.</param>
        </member>
        <member name="M:WatsonMesh.SyncResponse.#ctor(WatsonMesh.SyncResponseStatusEnum,System.Int64,System.IO.Stream)">
            <summary>
            Instantiate the object.
            </summary>
            <param name="status">Response status.</param>
            <param name="contentLength">Content length.</param>
            <param name="stream">Stream containing response data.  Will only be attached if contentLength is greater than zero.</param>
        </member>
        <member name="T:WatsonMesh.SyncResponseStatusEnum">
            <summary>
            Status for synchronous response objects.
            </summary>
        </member>
        <member name="F:WatsonMesh.SyncResponseStatusEnum.Unknown">
            <summary>
            Unknow
            </summary>
        </member>
        <member name="F:WatsonMesh.SyncResponseStatusEnum.Success">
            <summary>
            Success.
            </summary>
        </member>
        <member name="F:WatsonMesh.SyncResponseStatusEnum.SendFailure">
            <summary>
            Failure to send.
            </summary>
        </member>
        <member name="F:WatsonMesh.SyncResponseStatusEnum.Failed">
            <summary>
            Failed.
            </summary>
        </member>
        <member name="F:WatsonMesh.SyncResponseStatusEnum.Expired">
            <summary>
            Request expired or response arrived too late.
            </summary>
        </member>
        <member name="F:WatsonMesh.SyncResponseStatusEnum.PeerNotFound">
            <summary>
            Unable to find the requested peer.
            </summary>
        </member>
    </members>
</doc>
